[build-system]
build-backend = "_own_version_helper:build_meta"
requires = [
  "setuptools>=61",
  "tomli; python_version<'3.11'",
]
backend-path = [
  ".",
  "src",
]

[project]
name = "setuptools-scm"
description = "the blessed package to manage your versions by scm tags"
readme = "README.md"
license.file = "LICENSE"
authors = [
  { name = "Ronny Pfannschmidt", email = "opensource@ronnypfannschmidt.de" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Software Distribution",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "packaging>=20",
  "setuptools",
  "tomli>=1; python_version<'3.11'",
  "typing-extensions; python_version<'3.10'",
]
optional-dependencies.docs = [
  "entangled-cli~=2.0",
  "mkdocs",
  "mkdocs-entangled-plugin",
  "mkdocs-material",
  "mkdocstrings[python]",
  "pygments",
]
optional-dependencies.rich = [
  "rich",
]
optional-dependencies.test = [
  "build",
  "pytest",
  "rich",
  "typing-extensions; python_version<'3.11'",
  "wheel",
]
optional-dependencies.toml = [
]
urls.documentation = "https://setuptools-scm.readthedocs.io/"
urls.repository = "https://github.com/pypa/setuptools-scm/"
entry-points."distutils.setup_keywords".use_scm_version = "setuptools_scm._integration.setuptools:version_keyword"
entry-points."pipx.run".setuptools_scm = "setuptools_scm._cli:main"
entry-points."setuptools.file_finders".setuptools_scm = "setuptools_scm._file_finders:find_files"
entry-points."setuptools.finalize_distribution_options".setuptools_scm = "setuptools_scm._integration.setuptools:infer_version"
entry-points."setuptools_scm.files_command".".git" = "setuptools_scm._file_finders.git:git_find_files"
entry-points."setuptools_scm.files_command".".hg" = "setuptools_scm._file_finders.hg:hg_find_files"
entry-points."setuptools_scm.files_command_fallback".".git_archival.txt" = "setuptools_scm._file_finders.git:git_archive_find_files"
entry-points."setuptools_scm.files_command_fallback".".hg_archival.txt" = "setuptools_scm._file_finders.hg:hg_archive_find_files"
entry-points."setuptools_scm.local_scheme".dirty-tag = "setuptools_scm.version:get_local_dirty_tag"
entry-points."setuptools_scm.local_scheme".no-local-version = "setuptools_scm.version:get_no_local_node"
entry-points."setuptools_scm.local_scheme".node-and-date = "setuptools_scm.version:get_local_node_and_date"
entry-points."setuptools_scm.local_scheme".node-and-timestamp = "setuptools_scm.version:get_local_node_and_timestamp"
entry-points."setuptools_scm.parse_scm".".git" = "setuptools_scm.git:parse"
entry-points."setuptools_scm.parse_scm".".hg" = "setuptools_scm.hg:parse"
entry-points."setuptools_scm.parse_scm_fallback".".git_archival.txt" = "setuptools_scm.git:parse_archival"
entry-points."setuptools_scm.parse_scm_fallback".".hg_archival.txt" = "setuptools_scm.hg:parse_archival"
entry-points."setuptools_scm.parse_scm_fallback".PKG-INFO = "setuptools_scm.fallbacks:parse_pkginfo"
entry-points."setuptools_scm.parse_scm_fallback"."pyproject.toml" = "setuptools_scm.fallbacks:fallback_version"
entry-points."setuptools_scm.parse_scm_fallback"."setup.py" = "setuptools_scm.fallbacks:fallback_version"
entry-points."setuptools_scm.version_scheme"."calver-by-date" = "setuptools_scm.version:calver_by_date"
entry-points."setuptools_scm.version_scheme"."guess-next-dev" = "setuptools_scm.version:guess_next_dev_version"
entry-points."setuptools_scm.version_scheme"."no-guess-dev" = "setuptools_scm.version:no_guess_dev_version"
entry-points."setuptools_scm.version_scheme"."only-version" = "setuptools_scm.version:only_version"
entry-points."setuptools_scm.version_scheme"."post-release" = "setuptools_scm.version:postrelease_version"
entry-points."setuptools_scm.version_scheme"."python-simplified-semver" = "setuptools_scm.version:simplified_semver_version"
entry-points."setuptools_scm.version_scheme"."release-branch-semver" = "setuptools_scm.version:release_branch_semver_version"

[tool.setuptools.packages.find]
where = [ "src" ]
namespaces = false

[tool.setuptools.dynamic]
version = { attr = "_own_version_helper.version" }

[tool.setuptools_scm]

[tool.ruff]
src = [ "src" ]
fix = true
lint.select = [ "B", "C", "DTZ", "E", "F", "FURB", "I", "PT", "PYI", "RUF", "UP", "YTT" ]
lint.ignore = [ "B028" ]
lint.isort.force-single-line = true
lint.isort.from-first = false
lint.isort.lines-between-types = 1
lint.isort.order-by-type = true
lint.preview = true

[tool.repo-review]
ignore = [ "PP305", "GH103", "GH212", "MY100", "PC111", "PC160", "PC170", "PC180", "PC901" ]

[tool.pytest.ini_options]
minversion = "7"
testpaths = [ "testing" ]
filterwarnings = [
  "error",
  "ignore:.*tool\\.setuptools_scm.*",
  "ignore:.*git archive did not support describe output.*:UserWarning",
]
log_level = "debug"
log_cli_level = "info"
# disable unraisable until investigated
addopts = [ "-ra", "--strict-config", "--strict-markers", "-p", "no:unraisableexception" ]
markers = [
  "issue(id): reference to github issue",
  "skip_commit: allows to skip committing in the helpers",
]

[tool.scriv]
format = "md"
